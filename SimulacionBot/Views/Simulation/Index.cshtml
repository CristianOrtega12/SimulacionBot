@model IEnumerable<SimulacionBot.Models.DT_Mensajes_Telefonica_DigitalBlue_Bk>

@{
    ViewBag.Title = "Index";
}
<br />
<h2 style="background-color: #000 ; color:white" class="text-center">Subir Datos</h2>
<div class="container-fluid " style="display: flex; justify-content: center; border-style: inset">
    <form method="post" action="/Simulation/Import" enctype="multipart/form-data" class="auto ui large form">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <br />
            <input type="file" accept=".xlsx" class="form-control-file" name="file" id="file" required>
            <br />
            <button type="submit" class="btn btn-group-justified text-center" style="border-color:black" >
                Subir
            </button>
        </div>
    </form>
    @if (ViewData["Mensaje"] != null)
    {
        //SE CREA LECTOR DE ERROR
        <div class="alert alert-danger" role="alert">
            @ViewData["Mensaje"]
        </div>
    }

    @if (ViewData["MensajeCarga"] != null)
    {
        //SE CREA LECTOR DE Éxito
        <div class="alert alert-success" role="alert">
            @ViewData["MensajeCarga"]
        </div>
    }
</div>

<br />
@*<input type="button" value="Borrado de Datos" onclick="location.href='@Url.Action("Delete", "Simulation")'" />*@
@if (ViewData["MensajeCarga"] != null)
{
<h2 style="background-color: #000 ; color:white" class="text-center">Nuevos Datos Cargados</h2>
}
else
{
<h2 style="background-color: #000 ; color:white" class="text-center">Sin Procesar</h2>
}


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Telefono)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Mensaje)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Motivo)
        </th>
        <th>
            Fecha de Creación
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Estado)
        </th>
        <th>
            Tipo de Base
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Telefono)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Mensaje)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Motivo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoBase)
            </td>

        </tr>
    }

</table>


